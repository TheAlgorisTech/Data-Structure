

Fayssal Abdallah : 21410948
Structures de données et algorithm



# 1. Spécification des clients

Sorte: Client
Opérations:
. clientnouv: Char, Char, Int -> Client
. nom: Client -> Char (nom)
. prenom: Client -> Char ( prenom)
. status: Client -> int (status)
. estprime: Client -> bool
. estclassique: Client -> bool

Pré-condition:
. non vide(nom)
. non vide(prenom)
. non vide(status)

# 2. Spécification d'une file de clients
Sorte: File

Opérations:
. filenouv: -> File générateur /*contenant file vide*/
. adjc:File, Client -> File /*ajoute un client en queue*/

Pré-condition:
. Pré tête(File) = non vide(File)
. Pré supt(File) = non vide(File)

file: File, client: Client
. tête: File -> Client
. tête(adjc(file,client)) = si (vide(f)) alors client sinon tête(file)

queue: File -> Client
. queue(adj(file, client)) = si (vide(f)) alors client sinon queue(file)

. queuep(file) = si (estprime(queue(f)) alors queue(f))
. queuec(file) si (estclassique(queue(f)) alors queueu(f))

. vide(filenouv) = vrai
. lg(adjc(file, client)) = 1 + lg(file)
. sup(adj(file,client)) = si (vide(f)) alors filenouv sinon adjc(sup(file), client)
